// <auto-generated />
using System;
using DataPacketLibrary.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataPacketLibrary.Migrations
{
    [DbContext(typeof(RestrictRDbContext))]
    partial class RestrictRDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("DataPacketLibrary.Models.ApplicationInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InstallDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InstallLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RegistryPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UninstallString")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("BlockedApplications");
                });

            modelBuilder.Entity("DataPacketLibrary.Models.BlockedWebsites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BlockAllSites")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("BlockedWebsites");
                });

            modelBuilder.Entity("DataPacketLibrary.Models.BlockedWebsiteUrl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlockedWebsiteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BlockedWebsiteId");

                    b.ToTable("BlockedWebsiteUrls");
                });

            modelBuilder.Entity("DataPacketLibrary.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<int>("Recurrence")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Start")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("DataPacketLibrary.Models.ApplicationInfo", b =>
                {
                    b.HasOne("DataPacketLibrary.Models.Event", null)
                        .WithMany("BlockedApps")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataPacketLibrary.Models.BlockedWebsites", b =>
                {
                    b.HasOne("DataPacketLibrary.Models.Event", null)
                        .WithOne("BlockedSites")
                        .HasForeignKey("DataPacketLibrary.Models.BlockedWebsites", "EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataPacketLibrary.Models.BlockedWebsiteUrl", b =>
                {
                    b.HasOne("DataPacketLibrary.Models.BlockedWebsites", null)
                        .WithMany("BlockedWebsiteUrls")
                        .HasForeignKey("BlockedWebsiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataPacketLibrary.Models.BlockedWebsites", b =>
                {
                    b.Navigation("BlockedWebsiteUrls");
                });

            modelBuilder.Entity("DataPacketLibrary.Models.Event", b =>
                {
                    b.Navigation("BlockedApps");

                    b.Navigation("BlockedSites");
                });
#pragma warning restore 612, 618
        }
    }
}
