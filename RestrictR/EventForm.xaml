<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="RestrictR.EventForm"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RestrictR"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:collections="using:System.Collections"
    xmlns:dataannotations="using:System.ComponentModel.DataAnnotations"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:attached="using:RestrictR.Attached"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls" xmlns:system="using:System"
    d:DataContext="{d:DesignInstance Type=local:EventViewModel}"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    
    <Page.Resources>
        <DataTemplate x:Key="DefaultInputValidationErrorTemplate" x:DataType="collections:IEnumerable">
            <ItemsControl ItemsSource="{x:Bind (collections:IEnumerable)}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate x:DataType="dataannotations:ValidationResult">
                        <TextBlock Text="{x:Bind ErrorMessage}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DataTemplate>
        <DataTemplate x:Key="ErrorTemplate">
            <ItemsControl ItemsSource="{Binding}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding ErrorMessage}"
                                       Foreground="DeepPink" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DataTemplate>
    </Page.Resources>
    
    <!--<Page.Resources>
        <DataTemplate x:Key="ValidationTemplate" x:DataType="system:DateTimeOffset">
            <TextBlock Foreground="{ThemeResource SystemFillColorCriticalBackgroundBrush}" Text="{x:Bind}"></TextBlock>
        </DataTemplate>
    </Page.Resources>-->
    
    <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="InputValidationErrorStates">
                <VisualState x:Name="Errors">
                    <VisualState.Setters>
                        <Setter Target="ErrorPresenter.Visibility"
                                Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ErrorsCleared" />
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        

        <DatePicker Header="Start Date" Date="{x:Bind ViewModel.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"

                    ></DatePicker>
        <!--attached:Validation.ErrorTemplate="{StaticResource ValidationTemplate}"
                    attached:Validation.ValidationPropertyName="Start Date"
                    attached:Validation.ValidationProvider="{x:Bind ViewModel}"-->
        <TimePicker Header="Start Time" Time="{x:Bind ViewModel.StartTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TimePicker>
        <TimePicker Header="Duration" Time="{x:Bind ViewModel.Event.Duration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></TimePicker>

        <ComboBox ItemsSource="{x:Bind ViewModel.RecurrenceItems}"
                  SelectedValue="{x:Bind ViewModel.Recurrence, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  SelectedValuePath="Value" 
                  DisplayMemberPath="Text" />

        <TextBlock Text="{x:Bind ViewModel.ValidationErrorsMessage, Mode=OneWay}" Foreground="Red"></TextBlock>
        
        <!--<ContentPresenter x:Name="ErrorPresenter"
                          Content="{x:Bind ViewModel.ValidationErrors, Mode=OneWay}"
                          ContentTemplate="{Binding ErrorTemplate}"
                          Foreground="{ThemeResource SystemControlErrorTextForegroundBrush}"
                          AutomationProperties.AccessibilityView="Raw" />-->
        <!--x:Load="False"-->
        <!--<Button Command="{x:Bind ViewModel.SubmitCommand}" Content="Submit" />-->

        <Button Click="CancelButton_Click">Cancel</Button>
        
        
        <!--<Grid>
            <controls:InfoBar
                x:Name="SuccessInfoBar"
                Title="Success"
                Message="The form was filled in correctly."
                Severity="Success">
                <interactivity:Interaction.Behaviors>
                    <interactions:EventTriggerBehavior EventName="FormSubmissionCompleted" SourceObject="{x:Bind ViewModel}">
                        <interactions:ChangePropertyAction
                            PropertyName="IsOpen"
                            TargetObject="{x:Bind SuccessInfoBar}"
                            Value="True" />
                        <interactions:ChangePropertyAction
                            PropertyName="IsOpen"
                            TargetObject="{x:Bind FailureInfoBar}"
                            Value="False" />
                    </interactions:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </controls:InfoBar>
            <controls:InfoBar
                x:Name="FailureInfoBar"
                Title="Error"
                Message="The form was filled in with some errors."
                Severity="Error">
                <controls:InfoBar.ActionButton>
                    <Button Command="{x:Bind ViewModel.ShowErrorsCommand}" Content="Show errors" />
                </controls:InfoBar.ActionButton>
                <interactivity:Interaction.Behaviors>
                    <interactions:EventTriggerBehavior EventName="FormSubmissionFailed" SourceObject="{x:Bind ViewModel}">
                        <interactions:ChangePropertyAction
                            PropertyName="IsOpen"
                            TargetObject="{x:Bind SuccessInfoBar}"
                            Value="False" />
                        <interactions:ChangePropertyAction
                            PropertyName="IsOpen"
                            TargetObject="{x:Bind FailureInfoBar}"
                            Value="True" />
                    </interactions:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </controls:InfoBar>
        </Grid>-->
    </StackPanel>
</Page>

